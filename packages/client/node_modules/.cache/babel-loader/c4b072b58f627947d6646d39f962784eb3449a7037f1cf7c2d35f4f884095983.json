{"ast":null,"code":"var _jsxFileName = \"/home/abhishek/Projects/star-messenger/packages/client/src/components/Home/SideBar.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay } from \"@chakra-ui/react\";\nimport { Button } from \"@chakra-ui/react\";\nimport { TextField } from \"../TextField\";\nimport { Formik, Form } from \"formik\";\nimport { friendSchema } from \"@star-messenger/common\";\nimport { useDisclosure } from \"@chakra-ui/hooks\"; // Import the useDisclosure hook\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddFriendModal = ({\n  isOpen,\n  onClose\n}) => {\n  _s();\n  const {\n    isOpen: modalIsOpen,\n    onOpen,\n    onClose: modalOnClose\n  } = useDisclosure(); // Use useDisclosure\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: modalIsOpen,\n    onClose: modalOnClose,\n    isCentered: true,\n    children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: \"Add a friend!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          friendName: \"\"\n        },\n        onSubmit: values => {\n          modalOnClose(); // Close the modal\n          // Additional logic for handling form submission\n        },\n        validationSchema: friendSchema,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(ModalBody, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Friend's name\",\n              placeholder: \"Enter friend's username...\",\n              autoComplete: \"off\",\n              name: \"friendName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"blue\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(AddFriendModal, \"M5jKCu3Z8MB+leYuFGtfxgdI1Hw=\", false, function () {\n  return [useDisclosure];\n});\n_c = AddFriendModal;\nexport default AddFriendModal;\nvar _c;\n$RefreshReg$(_c, \"AddFriendModal\");","map":{"version":3,"names":["React","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","Button","TextField","Formik","Form","friendSchema","useDisclosure","jsxDEV","_jsxDEV","AddFriendModal","isOpen","onClose","_s","modalIsOpen","onOpen","modalOnClose","isCentered","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","friendName","onSubmit","values","validationSchema","label","placeholder","autoComplete","name","colorScheme","type","_c","$RefreshReg$"],"sources":["/home/abhishek/Projects/star-messenger/packages/client/src/components/Home/SideBar.jsx"],"sourcesContent":["import React from \"react\";\nimport {\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n} from \"@chakra-ui/react\";\nimport { Button } from \"@chakra-ui/react\";\nimport { TextField } from \"../TextField\";\nimport { Formik, Form } from \"formik\";\nimport { friendSchema } from \"@star-messenger/common\";\nimport { useDisclosure } from \"@chakra-ui/hooks\"; // Import the useDisclosure hook\n\nconst AddFriendModal = ({ isOpen, onClose }) => {\n  const {\n    isOpen: modalIsOpen,\n    onOpen,\n    onClose: modalOnClose,\n  } = useDisclosure(); // Use useDisclosure\n\n  return (\n    <Modal isOpen={modalIsOpen} onClose={modalOnClose} isCentered>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Add a friend!</ModalHeader>\n        <ModalCloseButton />\n        <Formik\n          initialValues={{ friendName: \"\" }}\n          onSubmit={(values) => {\n            modalOnClose(); // Close the modal\n            // Additional logic for handling form submission\n          }}\n          validationSchema={friendSchema}\n        >\n          <Form>\n            <ModalBody>\n              <TextField\n                label=\"Friend's name\"\n                placeholder=\"Enter friend's username...\"\n                autoComplete=\"off\"\n                name=\"friendName\"\n              />\n            </ModalBody>\n            <ModalFooter>\n              <Button colorScheme=\"blue\" type=\"submit\">\n                Submit\n              </Button>\n            </ModalFooter>\n          </Form>\n        </Formik>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default AddFriendModal;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,KAAK,EACLC,SAAS,EACTC,gBAAgB,EAChBC,YAAY,EACZC,WAAW,EACXC,WAAW,EACXC,YAAY,QACP,kBAAkB;AACzB,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,MAAM,EAAEC,IAAI,QAAQ,QAAQ;AACrC,SAASC,YAAY,QAAQ,wBAAwB;AACrD,SAASC,aAAa,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM;IACJF,MAAM,EAAEG,WAAW;IACnBC,MAAM;IACNH,OAAO,EAAEI;EACX,CAAC,GAAGT,aAAa,CAAC,CAAC,CAAC,CAAC;;EAErB,oBACEE,OAAA,CAACd,KAAK;IAACgB,MAAM,EAAEG,WAAY;IAACF,OAAO,EAAEI,YAAa;IAACC,UAAU;IAAAC,QAAA,gBAC3DT,OAAA,CAACR,YAAY;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChBb,OAAA,CAACX,YAAY;MAAAoB,QAAA,gBACXT,OAAA,CAACT,WAAW;QAAAkB,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACxCb,OAAA,CAACZ,gBAAgB;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpBb,OAAA,CAACL,MAAM;QACLmB,aAAa,EAAE;UAAEC,UAAU,EAAE;QAAG,CAAE;QAClCC,QAAQ,EAAGC,MAAM,IAAK;UACpBV,YAAY,CAAC,CAAC,CAAC,CAAC;UAChB;QACF,CAAE;QACFW,gBAAgB,EAAErB,YAAa;QAAAY,QAAA,eAE/BT,OAAA,CAACJ,IAAI;UAAAa,QAAA,gBACHT,OAAA,CAACb,SAAS;YAAAsB,QAAA,eACRT,OAAA,CAACN,SAAS;cACRyB,KAAK,EAAC,eAAe;cACrBC,WAAW,EAAC,4BAA4B;cACxCC,YAAY,EAAC,KAAK;cAClBC,IAAI,EAAC;YAAY;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC,eACZb,OAAA,CAACV,WAAW;YAAAmB,QAAA,eACVT,OAAA,CAACP,MAAM;cAAC8B,WAAW,EAAC,MAAM;cAACC,IAAI,EAAC,QAAQ;cAAAf,QAAA,EAAC;YAEzC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEZ,CAAC;AAACT,EAAA,CAxCIH,cAAc;EAAA,QAKdH,aAAa;AAAA;AAAA2B,EAAA,GALbxB,cAAc;AA0CpB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}