{"ast":null,"code":"var _jsxFileName = \"/home/abhishek/Projects/star-messenger/packages/client/src/components/Login/Login.jsx\",\n  _s = $RefreshSig$();\nimport { VStack, ButtonGroup, FormControl, FormLabel, Button, FormErrorMessage, Input, Heading } from \"@chakra-ui/react\";\nimport { Form, Formik } from \"formik\";\nimport React, { useContext } from \"react\";\nimport { TextField } from \"./TextField\";\nimport { useNavigate } from \"react-router-dom\";\nimport { formSchema } from \"@star-messenger/common\";\nimport AccountContext from \"../AccountContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n  const {\n    setUser\n  } = useContext(AccountContext);\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    },\n    validationSchema: formSchema,\n    onSubmit: (values, action) => {\n      const vals = {\n        ...values\n      };\n      // alert(JSON.stringify(values, null, 2));\n      action.resetForm();\n      fetch(\"http://localhost:4000/auth/login\", {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(vals)\n      }).catch(err => {\n        return;\n      }).then(res => {\n        if (!res || !res.ok || res.status >= 400) {\n          return;\n        }\n        return res.json();\n      }).then(data => {\n        if (!data) {\n          return;\n        }\n        setUser({\n          ...data\n        });\n        navigate(\"/home\");\n      });\n    },\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      as: Form,\n      w: {\n        base: \"90%\",\n        md: \"500px\"\n      },\n      m: \"auto\",\n      justify: \"center\",\n      h: \"100vh\",\n      spacing: \"1rem\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"username\",\n        placeholder: \"Enter username\",\n        autoComplete: \"off\",\n        label: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"password\",\n        placeholder: \"Enter password\",\n        autoComplete: \"off\",\n        label: \"Password\",\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: \"teal\",\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigate(\"/register\"),\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"rfJX+H2y+PQS2+TKxDzJxHEo+9w=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["VStack","ButtonGroup","FormControl","FormLabel","Button","FormErrorMessage","Input","Heading","Form","Formik","React","useContext","TextField","useNavigate","formSchema","AccountContext","jsxDEV","_jsxDEV","Login","_s","setUser","navigate","initialValues","username","password","validationSchema","onSubmit","values","action","vals","resetForm","fetch","method","credentials","headers","body","JSON","stringify","catch","err","then","res","ok","status","json","data","children","as","w","base","md","m","justify","h","spacing","fileName","_jsxFileName","lineNumber","columnNumber","name","placeholder","autoComplete","label","type","colorScheme","onClick","_c","$RefreshReg$"],"sources":["/home/abhishek/Projects/star-messenger/packages/client/src/components/Login/Login.jsx"],"sourcesContent":["import {\n  VStack,\n  ButtonGroup,\n  FormControl,\n  FormLabel,\n  Button,\n  FormErrorMessage,\n  Input,\n  Heading,\n} from \"@chakra-ui/react\";\nimport { Form, Formik } from \"formik\";\nimport React, { useContext } from \"react\";\nimport { TextField } from \"./TextField\";\nimport { useNavigate } from \"react-router-dom\";\nimport { formSchema } from \"@star-messenger/common\";\nimport AccountContext from \"../AccountContext\";\n\nexport const Login = () => {\n  const { setUser } = useContext(AccountContext);\n  const navigate = useNavigate();\n  return (\n    <Formik\n      initialValues={{ username: \"\", password: \"\" }}\n      validationSchema={formSchema}\n      onSubmit={(values, action) => {\n        const vals = { ...values };\n        // alert(JSON.stringify(values, null, 2));\n        action.resetForm();\n        fetch(\"http://localhost:4000/auth/login\", {\n          method: \"POST\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(vals),\n        })\n          .catch((err) => {\n            return;\n          })\n          .then((res) => {\n            if (!res || !res.ok || res.status >= 400) {\n              return;\n            }\n            return res.json();\n          })\n          .then((data) => {\n            if (!data) {\n              return;\n            }\n            setUser({ ...data });\n            navigate(\"/home\");\n          });\n      }}\n    >\n      <VStack\n        as={Form}\n        w={{ base: \"90%\", md: \"500px\" }}\n        m=\"auto\"\n        justify=\"center\"\n        h=\"100vh\"\n        spacing=\"1rem\"\n      >\n        <Heading>Log In</Heading>\n        <TextField\n          name=\"username\"\n          placeholder=\"Enter username\"\n          autoComplete=\"off\"\n          label=\"Username\"\n        />\n\n        <TextField\n          name=\"password\"\n          placeholder=\"Enter password\"\n          autoComplete=\"off\"\n          label=\"Password\"\n          type=\"password\"\n        />\n\n        <ButtonGroup>\n          <Button colorScheme=\"teal\" type=\"submit\">\n            Login\n          </Button>\n          <Button onClick={() => navigate(\"/register\")}>Create Account</Button>\n        </ButtonGroup>\n      </VStack>\n    </Formik>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}