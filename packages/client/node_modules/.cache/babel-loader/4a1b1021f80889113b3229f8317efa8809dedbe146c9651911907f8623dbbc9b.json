{"ast":null,"code":"var _jsxFileName = \"/home/abhishek/Projects/star-messenger/packages/client/src/components/Home/Home.jsx\",\n  _s = $RefreshSig$();\nimport { Grid, GridItem, Tabs } from \"@chakra-ui/react\";\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport socketConn from \"../../socket\";\nimport { AccountContext } from \"../AccountContext\";\nimport Chat from \"./Chat\";\nimport SideBar from \"./SideBar\";\nimport useSocketSetup from \"./useSocketSetup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FriendContext = /*#__PURE__*/createContext();\nexport const MessagesContext = /*#__PURE__*/createContext();\nexport const SocketContext = /*#__PURE__*/createContext();\nconst Home = () => {\n  _s();\n  var _friendList$friendInd;\n  const [friendList, setFriendList] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [friendIndex, setFriendIndex] = useState(0);\n  const {\n    user\n  } = useContext(AccountContext);\n  const [socket, setSocket] = useState(() => socketConn(user));\n  useEffect(() => {\n    setSocket(() => socketConn(user));\n  }, [user]);\n  useSocketSetup(setFriendList, setMessages, socket);\n  return /*#__PURE__*/_jsxDEV(FriendContext.Provider, {\n    value: {\n      friendList,\n      setFriendList\n    },\n    children: /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n      value: {\n        socket\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        templateColumns: \"repeat(10, 1fr)\",\n        h: \"100vh\",\n        as: Tabs,\n        onChange: index => setFriendIndex(index),\n        children: [/*#__PURE__*/_jsxDEV(GridItem, {\n          colSpan: \"3\",\n          borderRight: \"1px solid gray\",\n          children: /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n          colSpan: \"7\",\n          maxH: \"100vh\",\n          children: /*#__PURE__*/_jsxDEV(MessagesContext.Provider, {\n            value: {\n              messages,\n              setMessages\n            },\n            children: /*#__PURE__*/_jsxDEV(Chat, {\n              userid: (_friendList$friendInd = friendList[friendIndex]) === null || _friendList$friendInd === void 0 ? void 0 : _friendList$friendInd.userid\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"u4iiwYnfn9rtCEzAMsEkETqhSQQ=\", false, function () {\n  return [useSocketSetup];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Grid","GridItem","Tabs","createContext","useContext","useEffect","useState","socketConn","AccountContext","Chat","SideBar","useSocketSetup","jsxDEV","_jsxDEV","FriendContext","MessagesContext","SocketContext","Home","_s","_friendList$friendInd","friendList","setFriendList","messages","setMessages","friendIndex","setFriendIndex","user","socket","setSocket","Provider","value","children","templateColumns","h","as","onChange","index","colSpan","borderRight","fileName","_jsxFileName","lineNumber","columnNumber","maxH","userid","_c","$RefreshReg$"],"sources":["/home/abhishek/Projects/star-messenger/packages/client/src/components/Home/Home.jsx"],"sourcesContent":["import { Grid, GridItem, Tabs } from \"@chakra-ui/react\";\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport socketConn from \"../../socket\";\nimport { AccountContext } from \"../AccountContext\";\nimport Chat from \"./Chat\";\nimport SideBar from \"./SideBar\";\nimport useSocketSetup from \"./useSocketSetup\";\n\nexport const FriendContext = createContext();\nexport const MessagesContext = createContext();\nexport const SocketContext = createContext();\n\nconst Home = () => {\n  const [friendList, setFriendList] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [friendIndex, setFriendIndex] = useState(0);\n\n  const { user } = useContext(AccountContext);\n  const [socket, setSocket] = useState(() => socketConn(user));\n  useEffect(() => {\n    setSocket(() => socketConn(user));\n  }, [user]);\n  useSocketSetup(setFriendList, setMessages, socket);\n  return (\n    <FriendContext.Provider value={{ friendList, setFriendList }}>\n      <SocketContext.Provider value={{ socket }}>\n        <Grid\n          templateColumns=\"repeat(10, 1fr)\"\n          h=\"100vh\"\n          as={Tabs}\n          onChange={(index) => setFriendIndex(index)}\n        >\n          <GridItem colSpan=\"3\" borderRight=\"1px solid gray\">\n            <SideBar />\n          </GridItem>\n          <GridItem colSpan=\"7\" maxH=\"100vh\">\n            <MessagesContext.Provider value={{ messages, setMessages }}>\n              <Chat userid={friendList[friendIndex]?.userid} />\n            </MessagesContext.Provider>\n          </GridItem>\n        </Grid>\n      </SocketContext.Provider>\n    </FriendContext.Provider>\n  );\n};\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}